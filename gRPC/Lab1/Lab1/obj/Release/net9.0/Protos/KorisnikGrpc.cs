// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/korisnik.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Lab1 {
  public static partial class KorisnikService
  {
    static readonly string __ServiceName = "KorisnikService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Lab1.Korisnik> __Marshaller_Korisnik = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Lab1.Korisnik.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Lab1.IdKorisnik> __Marshaller_IdKorisnik = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Lab1.IdKorisnik.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Lab1.RangeId> __Marshaller_RangeId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Lab1.RangeId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Lab1.List> __Marshaller_List = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Lab1.List.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Lab1.Korisnik, global::Lab1.Korisnik> __Method_AddKorisnik = new grpc::Method<global::Lab1.Korisnik, global::Lab1.Korisnik>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddKorisnik",
        __Marshaller_Korisnik,
        __Marshaller_Korisnik);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Lab1.IdKorisnik, global::Lab1.IdKorisnik> __Method_DeleteKorisnik = new grpc::Method<global::Lab1.IdKorisnik, global::Lab1.IdKorisnik>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteKorisnik",
        __Marshaller_IdKorisnik,
        __Marshaller_IdKorisnik);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Lab1.Korisnik, global::Lab1.Korisnik> __Method_UpdateKorisnik = new grpc::Method<global::Lab1.Korisnik, global::Lab1.Korisnik>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateKorisnik",
        __Marshaller_Korisnik,
        __Marshaller_Korisnik);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Lab1.IdKorisnik, global::Lab1.Korisnik> __Method_ReturnKorisnik = new grpc::Method<global::Lab1.IdKorisnik, global::Lab1.Korisnik>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReturnKorisnik",
        __Marshaller_IdKorisnik,
        __Marshaller_Korisnik);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Lab1.RangeId, global::Lab1.List> __Method_ReturnList = new grpc::Method<global::Lab1.RangeId, global::Lab1.List>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReturnList",
        __Marshaller_RangeId,
        __Marshaller_List);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Lab1.IdKorisnik, global::Lab1.IdKorisnik> __Method_RemoveFromList = new grpc::Method<global::Lab1.IdKorisnik, global::Lab1.IdKorisnik>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveFromList",
        __Marshaller_IdKorisnik,
        __Marshaller_IdKorisnik);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Lab1.KorisnikReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of KorisnikService</summary>
    [grpc::BindServiceMethod(typeof(KorisnikService), "BindService")]
    public abstract partial class KorisnikServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Lab1.Korisnik> AddKorisnik(global::Lab1.Korisnik request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Lab1.IdKorisnik> DeleteKorisnik(global::Lab1.IdKorisnik request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Lab1.Korisnik> UpdateKorisnik(global::Lab1.Korisnik request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Lab1.Korisnik> ReturnKorisnik(global::Lab1.IdKorisnik request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Lab1.List> ReturnList(global::Lab1.RangeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Lab1.IdKorisnik> RemoveFromList(global::Lab1.IdKorisnik request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(KorisnikServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddKorisnik, serviceImpl.AddKorisnik)
          .AddMethod(__Method_DeleteKorisnik, serviceImpl.DeleteKorisnik)
          .AddMethod(__Method_UpdateKorisnik, serviceImpl.UpdateKorisnik)
          .AddMethod(__Method_ReturnKorisnik, serviceImpl.ReturnKorisnik)
          .AddMethod(__Method_ReturnList, serviceImpl.ReturnList)
          .AddMethod(__Method_RemoveFromList, serviceImpl.RemoveFromList).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, KorisnikServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddKorisnik, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Lab1.Korisnik, global::Lab1.Korisnik>(serviceImpl.AddKorisnik));
      serviceBinder.AddMethod(__Method_DeleteKorisnik, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Lab1.IdKorisnik, global::Lab1.IdKorisnik>(serviceImpl.DeleteKorisnik));
      serviceBinder.AddMethod(__Method_UpdateKorisnik, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Lab1.Korisnik, global::Lab1.Korisnik>(serviceImpl.UpdateKorisnik));
      serviceBinder.AddMethod(__Method_ReturnKorisnik, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Lab1.IdKorisnik, global::Lab1.Korisnik>(serviceImpl.ReturnKorisnik));
      serviceBinder.AddMethod(__Method_ReturnList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Lab1.RangeId, global::Lab1.List>(serviceImpl.ReturnList));
      serviceBinder.AddMethod(__Method_RemoveFromList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Lab1.IdKorisnik, global::Lab1.IdKorisnik>(serviceImpl.RemoveFromList));
    }

  }
}
#endregion
